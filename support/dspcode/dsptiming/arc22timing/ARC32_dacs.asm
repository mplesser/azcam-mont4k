; ARC32 clock board DACS table
; 21Feb12last change MPL

; This table is sent by the SETBIAS command to update clock board values.
; The format is BBBB DDDD DDMM VVVV VVVV VVVV (board, DAC, Mode, Value)
VMAX	EQU	12.4
ZERO	EQU	0.0

; bank 0
	DC	CLKV+$0A0080				; DAC = unbuffered mode

	DC    CLKV+$000100+@CVI((RG_HI+VMAX)/(2*VMAX)*255)	; RG High 
	DC    CLKV+$000200+@CVI((RG_LO+VMAX)/(2*VMAX)*255)	; RG Low  
	DC    CLKV+$000400+@CVI((P1_HI+VMAX)/(2*VMAX)*255)	; P1 High -- storage
	DC    CLKV+$000800+@CVI((P1_LO+VMAX)/(2*VMAX)*255)	; P1 Low
	DC    CLKV+$002000+@CVI((P2_HI+VMAX)/(2*VMAX)*255)	; P2 High
	DC    CLKV+$004000+@CVI((P2_LO+VMAX)/(2*VMAX)*255)	; P2 Low

	IF @SCP("MODE","MPP")
	DC    CLKV+$008000+@CVI((PMPP_HI+VMAX)/(2*VMAX)*255)	; P3 High
	DC    CLKV+$010000+@CVI((PMPP_LO+VMAX)/(2*VMAX)*255)	; P3 Low
	ENDIF

	IF @SCP("MODE","NORMAL")
	DC    CLKV+$008000+@CVI((P3_HI+VMAX)/(2*VMAX)*255)	; P3 High
	DC    CLKV+$010000+@CVI((P3_LO+VMAX)/(2*VMAX)*255)	; P3 Low
	ENDIF

	DC    CLKV+$020100+@CVI((S1_HI+VMAX)/(2*VMAX)*255)	; S1 High -- serials
	DC    CLKV+$020200+@CVI((S1_LO+VMAX)/(2*VMAX)*255)	; S1 Low         
	DC    CLKV+$020400+@CVI((S3_HI+VMAX)/(2*VMAX)*255)	; S3 High       
	DC    CLKV+$020800+@CVI((S3_LO+VMAX)/(2*VMAX)*255)	; S3 Low        
	DC    CLKV+$022000+@CVI((S2_HI+VMAX)/(2*VMAX)*255)	; S2 High      
	DC    CLKV+$024000+@CVI((S2_LO+VMAX)/(2*VMAX)*255)	; S2 Low       

	IF @SCP("MODE","MPP")
	DC    CLKV+$028000+@CVI((QMPP_HI+VMAX)/(2*VMAX)*255)	; Q3 High -- image
	DC    CLKV+$030000+@CVI((QMPP_LO+VMAX)/(2*VMAX)*255)	; Q3 Low
	ENDIF
	IF @SCP("MODE","NORMAL")
	DC    CLKV+$028000+@CVI((Q3_HI+VMAX)/(2*VMAX)*255)	; Q3 High -- image
	DC    CLKV+$030000+@CVI((Q3_LO+VMAX)/(2*VMAX)*255)	; Q3 Low
	ENDIF

	DC    CLKV+$040100+@CVI((Q2_HI+VMAX)/(2*VMAX)*255)	; Q2 High
	DC    CLKV+$040200+@CVI((Q2_LO+VMAX)/(2*VMAX)*255)	; Q2 Low
	DC    CLKV+$040400+@CVI((Q1_HI+VMAX)/(2*VMAX)*255)	; Q1 High
	DC    CLKV+$040800+@CVI((Q1_LO+VMAX)/(2*VMAX)*255)	; Q1 Low
	DC    CLKV+$042000+@CVI((SW_HI+VMAX)/(2*VMAX)*255)	; SW High
	DC    CLKV+$044000+@CVI((SW_LO+VMAX)/(2*VMAX)*255)	; SW Low
	DC    CLKV+$048000+@CVI((SW_HI+VMAX)/(2*VMAX)*255)	; TG High
	DC    CLKV+$050000+@CVI((SW_LO+VMAX)/(2*VMAX)*255)	; TG Low

; bank 1
	DC    CLKV+$060100+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$060200+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$060400+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$060800+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$062000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$064000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$068000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$070000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$080100+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$080200+@CVI((ZERO+VMAX)/(2*VMAX)*255)	;   
	DC    CLKV+$080400+@CVI((ZERO+VMAX)/(2*VMAX)*255)	;  
	DC    CLKV+$080800+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$082000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$084000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$088000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$090000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$0A0100+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$0A0200+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$0A0400+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$0A0800+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$0A2000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$0A4000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$0A8000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
	DC    CLKV+$0B0000+@CVI((ZERO+VMAX)/(2*VMAX)*255)	; 
